{"version":3,"sources":["img/michi.jpg","serviceWorker.js","components/Button.js","components/LayoutButtons.js","components/Sms.js","components/FormSms.js","components/Chat.js","page/MichiAge.js","components/Header.js","components/Layout.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Button","props","state","hello","bind","e","preventDefault","this","numRam","value","alert","reload","onSubmit","className","stateButton","Component","LayoutButtons","classBtn","numButtons","listButtons","index","min","max","push","showButtons","numberButtons","Sms","id","styleType","message","FormSms","handleSubmit","onClick","target","name","type","required","numMin","numMax","placeholder","Chat","Fragment","onClickFormSms","MichiAge","inicialNumber","maxNumber","minNumber","numTries","numberRandom","parseInt","Math","random","form","number","undefined","sign","smsArray","handleClickFormSms","resposeMesssage","countTries","formSms","setTimeout","setState","textContent","sender","length","Header","src","logo","to","Layout","children","App","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.09ea0063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/michi.5bb19dd9.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport './styles/button.css';\r\nexport default class Button extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n        this.hello=this.hello.bind(this);\r\n    }\r\n    hello(e){\r\n        e.preventDefault();\r\n        if (this.props.numRam==this.props.value) {\r\n            alert(\"Ganaste\");\r\n            window.location.reload();\r\n            // Location.reload();\r\n        }else{\r\n            alert(\"perdiste\");\r\n            // Location.reload();\r\n            window.location.reload();\r\n        }\r\n        // console.log(\"hello\");\r\n    }    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.hello}>\r\n                    <button className={\"Button \"+this.props.stateButton} >{this.props.value}</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createElement } from 'react'\r\nimport  Button from './Button';\r\nimport './styles/layoutBtn.css';\r\nexport class LayoutButtons extends Component {\r\n    classBtn=\"\";\r\n    showButtons(numButtons=80){\r\n        var listButtons=[];\r\n        for (let index = 1; index <= numButtons; index++) {\r\n            this.classBtn= \"\";\r\n           if (index < this.props.min) {\r\n               this.classBtn=\"Button__inactive\";\r\n            }\r\n            if (index > this.props.max) {\r\n               this.classBtn=\"Button__inactive\";\r\n            }\r\n            listButtons.push(<Button value={index} stateButton={this.classBtn} numRam={this.props.numRam}/>); \r\n        }\r\n        return listButtons;\r\n    }\r\n    render() {\r\n        // var elemnts=this.showButtons();\r\n        return <div className=\"ContainerBtn\"> {this.showButtons(this.props.numberButtons)}</div>  ;       \r\n    }\r\n}\r\nexport default LayoutButtons;\r\n","import React from 'react'\r\nimport \"./styles/Sms.css\";\r\nexport default function Sms(props) {\r\n    var classSmsContent=\"Sms__content \";\r\n    \r\n    return (\r\n        <div className=\"Sms\" id={props.id}>\r\n            <p className={classSmsContent+props.styleType}> {props.message} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./styles/formSms.css\";\r\nexport default class FormSms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        this.props.onClick(e.target);\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"FormSms\"  onSubmit={this.handleSubmit}>\r\n                <p className=\"FormSms__message\">Tu edad es \r\n                    <select name=\"sign\" className=\"FormSms__select\">\r\n                        <option value=\">\">Mayor</option>\r\n                        <option value=\"<\">Menor</option>\r\n                    </select>\r\n                    a\r\n                    <input type=\"number\" required name=\"number\" min={this.props.numMin} max={this.props.numMax} className=\"FormSms__number\" placeholder=\"0\"></input>\r\n                    <button className=\"FormSms__button\">Enviar</button>\r\n                </p>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Logo from '../img/michi.jpg';    \r\nimport Sms from './Sms';\r\nimport FormSms from './FormSms';\r\nimport \"./styles/chat.css\";\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    // array=[ <Sms img={Logo} message=\"Hola, quieres adivinar mi edad?\"/>];\r\n    render() {\r\n        // this.array.push(<Sms img={Logo} message=\"Hola, quieres adivinar mi edad?\"/>);\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Chat\">\r\n                    <div className=\"Sms__container\">\r\n                        {this.props.Sms}\r\n                    </div>\r\n                    <FormSms numMax={this.props.max} numMin={this.props.min} onClick={this.props.onClickFormSms}  />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport LayoutButtons from '../components/LayoutButtons';\r\nimport Chat from '../components/Chat';\r\nimport Sms from '../components/Sms';\r\nexport default class MichiAge extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inicialNumber:50,\r\n            maxNumber:50,\r\n            minNumber:1,\r\n            numTries:4,\r\n            numberRandom:parseInt(Math.random()*(50-1)+1),\r\n            form:{\r\n                number:undefined,\r\n                sign:undefined\r\n            },\r\n            smsArray:[<Sms message=\"Hola ¿Quieres adivinar mi edad?\" styleType=\"Michi\"/>,<Sms message=\"Solo puedes hacerme 4 preguntas\" styleType=\"Michi\"/>]\r\n        }\r\n        this.handleClickFormSms=this.handleClickFormSms.bind(this);\r\n        this.resposeMesssage=this.resposeMesssage.bind(this);\r\n        this.countTries=this.countTries.bind(this);\r\n    }\r\n    handleClickFormSms(formSms){\r\n        if (this.state.numTries!=0) {\r\n            if (formSms.sign.value==\">\"  ){\r\n                setTimeout(() => {\r\n                    this.resposeMesssage(\"Tu edad es mayor a  \"+formSms.number.value+\" ?\",\"User\");\r\n                }, 300);\r\n                this.setState({form:{number:parseInt(formSms.number.value,10) ,sign:formSms.sign.value,numTries:--this.state.numTries}});\r\n                if (this.state.numberRandom > formSms.number.value) {\r\n                    setTimeout(() => {\r\n                        this.resposeMesssage(\"Sii!!\",\"Michi\");\r\n                        setTimeout(() => {\r\n                            this.countTries();\r\n                        }, 500);\r\n                    }, 1500);\r\n                    this.setState({minNumber:parseInt(formSms.number.value,10)+1});\r\n                    \r\n                    // this.resposeMesssage(\"Tu edad !!\",\"Michi\");\r\n                }\r\n                else{ \r\n                    setTimeout(() => {\r\n                        this.setState({maxNumber:parseInt(formSms.number.value,10)});\r\n                        this.resposeMesssage(\"Nooo !!\",\"Michi\");\r\n                        setTimeout(() => {\r\n                            this.countTries();\r\n                        }, 500);\r\n                    }, 1500);   \r\n                }\r\n            }else if(formSms.sign.value==\"<\"){\r\n                setTimeout(() => {     \r\n                    this.resposeMesssage(\"Tu edad es menor a \"+formSms.number.value +\" ?\",\"User\");\r\n                }, 300);\r\n                this.setState({form:{number:parseInt(formSms.number.value,10) ,sign:formSms.sign.value,numTries:--this.state.numTries}});\r\n                if (this.state.numberRandom < formSms.number.value) {\r\n                    this.setState({maxNumber:parseInt(formSms.number.value,10)-1});\r\n                    setTimeout(() => {\r\n                        this.resposeMesssage(\"Siiii !! \",\"Michi\");\r\n                        setTimeout(() => {\r\n                            this.countTries();\r\n                        }, 500);\r\n                    }, 1500);\r\n                }\r\n                else{\r\n                    setTimeout(() => {\r\n                        this.setState({minNumber:parseInt(formSms.number.value,10)});\r\n                        this.resposeMesssage(\"Nooo !!\",\"Michi\");\r\n                        setTimeout(() => {\r\n                            this.countTries();\r\n                        }, 500);\r\n                    }, 1500);\r\n                }\r\n            }\r\n        }else{\r\n            setTimeout(() => {\r\n                this.resposeMesssage(\"Ya no tienes mas preguntas escoje un numero !!\",\"Michi\");\r\n                \r\n            }, 500);\r\n        }\r\n    }\r\n    resposeMesssage(textContent, sender){\r\n        this.setState( (state)=>{\r\n            return {smsArray:[...state.smsArray, <Sms message={textContent} styleType={sender} id={state.smsArray.length}/>]}\r\n        });        \r\n    }\r\n    countTries(){\r\n        if (this.state.numTries!=1 && this.state.numTries >  0) {\r\n            this.resposeMesssage(\"Solo te quedan \"+this.state.numTries+\" preguntas\",\"Michi\");\r\n        }else if(this.state.numTries==1){\r\n            this.resposeMesssage(\"Solo te queda \"+this.state.numTries+\" pregunta\",\"Michi\");\r\n        } else if (this.state.numTries==0) {\r\n            this.resposeMesssage(\"Ya no tienes preguntas, es ahora de que escojas uno de los numeros disponibles\",\"Michi\");\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <LayoutButtons numberButtons={this.state.inicialNumber} max={this.state.maxNumber} min={this.state.minNumber} numRam={this.state.numberRandom} />\r\n                <Chat max={this.state.maxNumber} min={this.state.minNumber} onClickFormSms={this.handleClickFormSms} Sms={this.state.smsArray} />         \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/michi.jpg';\r\nimport './styles/header.css';\r\nfunction Header() {\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"Header\">\r\n                <img className=\"Header__logo\" src={logo}/> \r\n                <Link to=\"/\" className=\"Header__item\" >Michi cubico.</Link>\r\n            </header>\r\n            {/* <nav className=\"Nav\">\r\n                <ul className=\"Nav__container\">\r\n                    <li><Link className=\"Nav__item\" to=\"/michiAge\">Adivina la edad del michi</Link> </li>                \r\n                </ul>\r\n            </nav> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport './styles/reset.css';\r\nexport default function Layout(props) {\r\n    return (\r\n        <div>\r\n            <Header/>   \r\n            {props.children}\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport MichiAge from '../page/MichiAge';\r\nimport NotFound from './NotFound';\r\nimport Layout from './Layout';\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    {/* <Route exact path=\"/\" component={MichiAge}/> */}\r\n                    <Route exact path=\"/michicubico\" component={MichiAge}/>\r\n                    <Route  component={MichiAge}/>\r\n                </Switch>\r\n            </Layout>\r\n      </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\n// import Nav from './components/Nav'\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n//<TemplateButton value=\"1\"/> component red\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}